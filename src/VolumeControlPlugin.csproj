<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>disable</Nullable>
    <RootNamespace>Loupedeck.VolumeControlPlugin</RootNamespace>

    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>

    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>

    <PluginApiDir Condition="$(OS) == 'Windows_NT'">C:\Program Files\Logi\LogiPluginService\</PluginApiDir>
    <PluginApiDir Condition="$(OS) != 'Windows_NT'">/Applications/Utilities/LogiPluginService.app/Contents/MonoBundle/</PluginApiDir>

    <PluginDir Condition="$(OS) == 'Windows_NT'">$(LocalAppData)\Logi\LogiPluginService\Plugins\</PluginDir>
    <PluginDir Condition="$(OS) != 'Windows_NT'">~/Library/Application\ Support/Logi/LogiPluginService/Plugins/</PluginDir>

    <BaseOutputPath>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)..\bin\'))</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)$(Configuration)\bin\</OutputPath>

    <PluginShortName>VolumeControl</PluginShortName>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Include="Resources\**\*.png" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AudioSwitcher.AudioApi" Version="4.0.0-alpha5" />
    <PackageReference Include="AudioSwitcher.AudioApi.CoreAudio" Version="4.0.0-alpha5" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="PluginApi">
      <HintPath>$(PluginApiDir)PluginApi.dll</HintPath>
    </Reference>
  </ItemGroup>

  <Target Name="CopyPackage" AfterTargets="PostBuildEvent">
    <Message Text="📦 Copying package files..." Importance="High" />
    <ItemGroup>
      <PackageFiles Include="package\**\*" />
    </ItemGroup>
    <Copy SourceFiles="@(PackageFiles)" DestinationFolder="$(OutputPath)..\%(RecursiveDir)" />
    <Message Text="✅ Package files copied to $(OutputPath)..\" Importance="High" />
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Condition="$(OS) == 'Windows_NT'" Command="echo $(BaseOutputPath)$(Configuration)\ &gt; &quot;$(PluginDir)$(ProjectName).link&quot;" />
    <Exec Condition="$(OS) != 'Windows_NT'" Command="echo $(BaseOutputPath)$(Configuration)\ &gt; $(PluginDir)$(ProjectName).link" />
    <Message Text="🔨 Created plugin link at: $(PluginDir)$(ProjectName).link" Importance="High" />

    <Message Text="🔄 Sending plugin reload command for $(PluginShortName) to Logi Plugin Service" Importance="High" />
    <Exec Condition="$(OS) == 'Windows_NT'" Command="start loupedeck:plugin/$(PluginShortName)/reload" ContinueOnError="true" />
    <Exec Condition="$(OS) != 'Windows_NT'" Command="open loupedeck:plugin/$(PluginShortName)/reload" ContinueOnError="true" />
    <Message Condition="'$(MSBuildLastTaskResult)' == 'false'" Text="❌ Couldn't reload the plugin, please restart the Logi Plugin Service manually" Importance="High" />
  </Target>

  <Target Name="PluginClean" AfterTargets="CoreClean">
    <Message Text="🧹 Cleaning up plugin link file and output directories..." Importance="High" />

    <Delete Condition="$(OS) == 'Windows_NT'" Files="$(PluginDir)$(ProjectName).link" />
    <Exec Condition="$(OS) != 'Windows_NT'" Command="rm -f $(PluginDir)$(ProjectName).link" />

    <RemoveDir Directories="$(OutputPath)..\" />

    <Message Text="🧼 Plugin link file and output directories have been cleaned!" Importance="High" />
  </Target>

</Project>
